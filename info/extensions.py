"""
extensions.py
–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –ø—Ä–æ–µ–∫—Ç–∞ Django.
"""

import logging
from loguru import logger
from django.core.cache import cache
from django.conf import settings
from celery import Celery

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Loguru
logger.add(
    "logs/voenkom.log",
    rotation="5 MB",
    retention="10 days",
    level="INFO",
    format="{time:YYYY-MM-DD at HH:mm:ss} | {level} | {message}",
    enqueue=True
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞ Django –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
logging.basicConfig(level=logging.INFO)
django_logger = logging.getLogger("django")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Celery
celery_app = Celery("voenkom")
celery_app.config_from_object("django.conf:settings", namespace="CELERY")
celery_app.autodiscover_tasks()


def clear_cache():
    """–û—á–∏—â–∞–µ—Ç –≤–µ—Å—å –∫—ç—à Django (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö)."""
    try:
        cache.clear()
        logger.info("üßπ –ö—ç—à –æ—á–∏—â–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞: {e}")


def init_extensions():
    """–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ app_factory.py)."""
    logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π Django...")
    logger.info(f"DEBUG mode: {settings.DEBUG}")
    logger.info(
        f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ: {settings.DATABASES['default']['ENGINE']}"
    )
    logger.info(f"–ö—ç—à: {settings.CACHES['default']['BACKEND']}")
    logger.info("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.")
